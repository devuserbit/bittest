<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2012 - BIT Analytical Instruments GmbH. All rights reserved
    
    $LastChangedDate:  $
    $Rev:  $
    $URL:  $

    history:
            - V1.0      APopescu        initial version
            
    This is the default description xml for the HSMService scaffolding 
    function. If no xml file was found in the designated folder this one 
    will be used instead creating the same template as found in:
    
        common/BaseClasses/CHSMService/Template folder
    
    1. Important conventions:
    
        - 'C', 'HSM', 'Service', 'State', 'hsm_service', 'initial', 'callbacks'  
          are keywords and must not be used in any tag attributes
          
         
    2. Designated tags/atributtes:
    
        <hsm_service>                       This must be the uppermost tag in the hierarchy
            name=""                         Name of the hsm_service, if omitted "HSMTemplateService" will be used
            
            path=""                         Absolute path of the location where the state machine should be placed.
                                            The script checks if the last given folder is present and if not it will be
                                            created only when every other folder is present.
                                            ! This path is lover in priority then the path passed through the command line
                                            interface !
            
        <state>                             Tag describing a state of the hsm machine
            name=""                         name of the state
            
            <initial />                     Marks the initial state (only accepted inside state tag)
                                            (if by mistake multiple states have initial attributes
                                            then only the first encountered is used)
                                            ! Empty-element-tag only !
            
        <callbacks>                         Callback functions to be implemented
                                            If omitted no callback functions will be implemented
                                  
            <entry />,<active />,<exit />   Callback functions :
                                                * entry     - OnEntry()
                                                * active    - OnActive()
                                                * exit      - OnExit()
                                            ! Only accepted inside the <callbacks> tag!
                                            ! Empty-element-tag only !
        
        <default_fct>                       Default functions tag 
            cmd, stdcmd,                    Defines which command handle functions
            reset, event,                   should be implemented inside the states OnActive() function:
            abort,timer,resp,                   * cmd       - OnCommandMsg
            all                                 * stdcmd    - OnStdCommandMsg
                                                * reset     - OnResetMsg
                                                * resp      - OnResponseMsg
                                                * event     - OnEventMsg
                                                * abort     - OnAbortMsg
                                                * timer     - OnTimerMsg
                                                
                                                *all        - All previous functions
                                            Strings must be separated with '|' :
                                            
                                             <default_fct> cmd | stdcmd | event | abort | reset | abort | timer | resp | </default_fct>
                                                
                                                
    3. Design Guidelines:
    
        a. States included in each other have a parent-child relationship:
            
            <state name="Root">
                <state name="Idle">
                </state>
                <state name="Busy">
                    <state name="Activity">
                    </state>
                </state>
            </state>
            
        The hierarchy above will look like the following in code:
        
            Root
            |  |
            |  |-Idle
            |
            |-Busy
                  |
                  |-Activity
        
        
-->

<hsm_service name="Template" path="C:\Projects\Tools\HSMTemplateScaffolding\TestService\">
    <state name="Root">
        <callbacks><entry/><active/></callbacks>
        
        <default_fct> <cmd/> <stdcmd /> <abort /> <reset /> <timer />  </default_fct>
            
        <state name="Reset" Initial="True">
            <initial />
            <callbacks><active/></callbacks>
            <default_fct> <cmd /> </default_fct>
            <state name="Activity1" Dynamic="True">
                <callbacks> <entry /> <active /> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
        </state>
        
        <state name="Ready">
            <callbacks><active /></callbacks>
            <default_fct><cmd /><stdcmd /></default_fct>
        </state>
        
        <state name="Busy">
            <callbacks> <entry /> <active /> <exit /> </callbacks>
            <default_fct> <cmd /> <stdcmd /> <abort /> <reset />  <timer /> </default_fct>
            
            <state name="Activity1" Dynamic="True">
                        <state name="Activity1" Dynamic="True">
                                    <state name="Activity1" Dynamic="True">
                <callbacks> <entry /> <active /> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
            <state name="Activity2" Dynamic="True">
                        <state name="Activity1" Dynamic="True">
                <callbacks> <entry /> <active /> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
            <state name="Activity2" Dynamic="True">
                        <state name="Activity1" Dynamic="True">
                <callbacks> <entry /> <active /> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
            <state name="Activity2" Dynamic="True">
                <callbacks> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
                <callbacks> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
                <callbacks> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
                <callbacks> <entry /> <active /> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
            <state name="Activity2" Dynamic="True">
                <callbacks> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
                <callbacks> <entry /> <active /> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
            <state name="Activity2" Dynamic="True">
                <callbacks> <exit /> </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>
            <state name="Activity3" Dynamic="True">
                <callbacks> <entry />  </callbacks>
                <default_fct> <cmd /> <stdcmd /> <abort /> <reset /> <timer /> </default_fct>
            </state>            

        </state>
        
    </state>
</hsm_service>



